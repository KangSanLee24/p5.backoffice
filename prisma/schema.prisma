// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userid Int @id @default(autoincrement()) @map("user_id") 
  password String  @map("password")
   name String @map("username")
  email String @map("email")
  phone String @map("phone")
  grade gradeType @map("grade")
  point Int @default(1000000) @map("point")
  role role  @map("userrole")
  createddate DateTime
  updateddate DateTime
  diib dib[]
}

model Store {
  store_id Int
  storename String
  category String
  address String
  phone String
  content String
  rating Int
  
}

model dib {
  author User @relation(fields: [user_id],references: [user_id])

  created_date DateTime
  updated_date DateTime
}


 enum gradeType {
   a
   b
   c
   d
//   고마운분
//   귀한분
//   더귀한분
//   천생연분
  }

enum role {
  CUSTOMER
  MANAGER
}




















// model User {
//   id        Int      @id @default(autoincrement())
//   email     String   @unique
//   password  String
//   name      String
//   role      UserRole @default(APPLICANT)
//   createdAt DateTime @default(now()) @map("created_at")
//   updatedAt DateTime @updatedAt @map("updated_at")
//   resumes   Resume[]

//   @@map("users")
// }

// model Resume {
//   id        Int          @id @default(autoincrement())
//   authorId  Int          @map("author_id")
//   title     String
//   content   String       @db.Text
//   status    ResumeStatus @default(APPLY)
//   createdAt DateTime     @default(now()) @map("created_at")
//   updatedAt DateTime     @updatedAt @map("updated_at")
//   author    User         @relation(fields: [authorId], references: [id])

//   @@map("resumes")
// }

// enum UserRole {
//   APPLICANT
//   RECRUITER
// }

// enum ResumeStatus {
//   APPLY
//   DROP
//   PASS
//   INTERVIEW1
//   INTERVIEW2
//   FINAL_PASS
// }
